library(TTR)
library(IntroCompFinR)
library(kableExtra)
library(pacman)
library(hrbrthemes)
library(quantmod)
library(PerformanceAnalytics)
library(tidyverse)
library(psych)
library(forecast)
library(tseries)
library(timeSeries)
library(naniar)
library(lmtest)
library(stocks)
sfTest(btc)
install.packages("nortest")
library(nortest)
sfTest(btc)
sf.test(btc)
muN_btc <- mean(btc)
sdN_btc <- sd(btc)
gridN_btc <- seq(-.20, .20, by = .001)
dN_btc <- dnorm(gridN_btc, muN_btc, sdN_btc)
library(MASS)
library(GeneralizedHyperbolic)
NIG_btc <- nigFit(btc)
#agrupar parametros en un objeto
ParametroNIG_btc <- NIG_btc@fit[["par"]]
ParametroNIG_btc <- data.frame(t(ParametroNIG_btc))
#agrupar parametros en un objeto
ParametroNIG_btc <- NIG_btc@fit[["par"]]
Criptomonedas <- merge.xts(btc,
eth,
usdc,
usdt,
ada,
bnb,
xrp,
hex,
join = "inner")
cor.plot(Criptomonedas)
chartSeries(Criptomonedas)
chart.TimeSeries(scale(Criptomonedas), legend.loc = "topleft")
Rendimientos_C <- Return.calculate(Criptomonedas, method = "log")[-1]
chart.CumReturns(Rendimientos_C, from = "2018-01-01", to = "2022-02-20", legend.loc = "topleft")
chart.CumReturns(Rendimientos_C, from = "2019-01-01", to = "2022-02-20", legend.loc = "topleft")
mean <- apply(Return.calculate(Criptomonedas, method = "log")[-1,],
2,function(x) mean(x))
sd<- apply(Return.calculate(Criptomonedas, method = "log")[-1,],
2,function(x) sd(x))
m<- as.data.frame(mean)
m<- t(m)
s<- t(as.data.frame(sd))
x<- rbind(m,s)*100
x %>%
t() %>%
kbl(caption = "Table 1: Media & desviación estandar de los activos", escape = TRUE) %>%
kable_classic(full_width = FALSE, html_font = "Cambria")
ggplot(aes(sd, mean), label(""))
g1<- ggplot(mapping = aes(sd,mean,
label=c("IBM","BABA","AMZN","FB","MSFT","LNVGY","TSLA")))+
geom_point()+
geom_text(hjust=0,vjust=0)+
theme_bw()+xlab("Riesgo")+ylab("Retorno")+
scale_y_continuous(breaks = seq(0,0.003,by=0.001), limits = c(0,0.003))+
scale_x_continuous(breaks = seq(0.015,0.037,by=0.007), limits = c(0.015,0.037))+
ggtitle("Trade-off Riesgo-Retorno", subtitle = "7 Activos Riesgosos")+
theme_minimal()
g1
cov<-cov(Rendimientos_C)*100
cov %>%
round(digits = 4) %>%
kbl(caption = "Table 2: Matriz de covarianzas de los activos", escape = TRUE) %>%
kable_classic(full_width = FALSE, html_font = "Cambria")
generate_heat_map <- function(correlationMatrix, title)
{
heatmap.2(x = correlationMatrix,
cellnote = correlationMatrix,
main = title,
symm = TRUE,
dendrogram="none",
Rowv = FALSE,
trace="none",
density.info="none",
notecol="black")
}
corr1 <- round(cor(Rendimientos_C) * 100, 2)
generate_heat_map(corr1,"Heatmap: Correlaciones")
library(gplot)
library(gplots)
corr1 <- round(cor(Rendimientos_C) * 100, 2)
generate_heat_map(corr1,"Heatmap: Correlaciones")
mean<- apply(Rendimientos_C, 2, function(x) mean(x))
sd<- apply(Rendimientos_C, 2,function(x) sd(x))
cov<- cov(Rendimientos_C)
# Pesos  ------------------------------------------------------------------
weights<- rep(1,8)/8
# construimos el portafolio -----------------------------------------------
getPortfolio(mean,cov,weights =
weights)
# Portafolio de minima varianza -------------------------------------------
globalmin=globalMin.portfolio(mean,cov,
shorts = F)
g3<- ggplot()+geom_point(
mapping = aes(globalmin$sd,
globalmin$er,
color="1"),size=4
)
g3<- g3+geom_point(mapping =
aes(sd,mean,color="2"),
size=4)
g3<- g3+ scale_color_manual(
"",values = c("blue","purple"),
labels=c("Min Var.","Stocks 1")
)
g3<- g3+ xlab("Riesgo")+ylab("Retorno")+
ggtitle("Trade-off Riesgo-Retorno",
subtitle = "Siete Activos riesgos & minima varianza")+
theme_minimal()
g3
data=as.data.frame(round(globalmin$weights*100,2))
for(i in  1:7){
if(data[i,1]==0){
data[i,1]=NA
}
else{
data[i,1]=data[i,1]
}
}
names(data)=c("Pesos")
data=data.frame("Acciones"=tickers,"Pesos"=data)
library(zoo)
library(xts)
library(TTR)
library(IntroCompFinR)
library(kableExtra)
library(pacman)
library(hrbrthemes)
library(quantmod)
library(PerformanceAnalytics)
library(tidyverse)
library(psych)
library(forecast)
library(tseries)
library(timeSeries)
library(naniar)
library(lmtest)
library(stocks)
library(zoo)
library(xts)
library(TTR)
library(IntroCompFinR)
library(kableExtra)
library(pacman)
library(hrbrthemes)
library(quantmod)
library(PerformanceAnalytics)
library(tidyverse)
library(psych)
library(forecast)
library(tseries)
library(timeSeries)
library(naniar)
library(lmtest)
library(stocks)
getSymbols("BTC-USD", from = "2017-03-01", to = "2022-02-20")
getSymbols("ETH-USD", from = "2017-03-01", to = "2022-02-20")
getSymbols("USDC-USD", from = "2017-03-01", to = "2022-02-20")
getSymbols("USDT-USD", from = "2017-03-01", to = "2022-02-20")
getSymbols("ADA-USD", from = "2017-03-01", to = "2022-02-20")
getSymbols("BNB-USD", from = "2017-03-01", to = "2022-02-20")
getSymbols("XRP-USD", from = "2017-03-01", to = "2022-02-20")
getSymbols("HEX-USD", from = "2017-03-01", to = "2022-02-20")
#------------------------
btc <- Ad(`BTC-USD`)
eth <- Ad(`ETH-USD`)
usdc <- Ad(`USDC-USD`)
usdt <- Ad(`USDT-USD`)
ada <- Ad(`ADA-USD`)
bnb <- Ad(`BNB-USD`)
xrp <- Ad(`XRP-USD`)
hex <- Ad(`HEX-USD`)
#------------------------
btc <- na.locf(btc)
eth <- na.locf(eth)
usdc <- na.locf(usdc)
usdt <- na.locf(usdt)
ada <- na.locf(ada)
bnb <- na.locf(bnb)
xrp <- na.locf(xrp)
hex <- na.locf(hex)
Criptomonedas <- merge.xts(btc,
eth,
usdc,
usdt,
ada,
bnb,
xrp,
hex,
join = "inner")
cor.plot(Criptomonedas)
chartSeries(Criptomonedas)
chart.TimeSeries(scale(Criptomonedas), legend.loc = "topleft")
install.packages("WhatIf")
?visdat
??visdat
??DEoptim
?DEoptim
library(tidyverse)
library(psych)
library(visdat)
library(readr)
library(readxl)
library(quantmod)
getSymbols.FRED(CPALTT01USM657N, return.class = "xts")
getSymbols.FRED(Consumer Price Index: Total All Items for the United States, return.class = "xts")
library(quantmod)
getSymbols.FRED(Consumer Price Index: Total All Items for the United States, return.class = "xts")
getSymbols.FRED("Consumer Price Index: Total All Items for the United States", return.class = "xts")
getSymbols.FRED('CPIAUCNS',env=globalenv(), return.class = "xts")
View(CPIAUCNS)
getSymbols.FRED('CPALTT01USM657N',env=globalenv(), return.class = "xts")
View(CPALTT01USM657N)
View(CPALTT01USM657N)
cpi <- getSymbols.FRED('CPALTT01USM657N',
from=as.Date("2017-02-05"), to=Sys.Date()
env=globalenv(),
cpi <- getSymbols.FRED('CPALTT01USM657N',
env=globalenv(),
return.class = "xts")
cpi <- getSymbols.FRED('CPALTT01USM657N',
from=as.Date("2017-02-05"), to=Sys.Date()
env=globalenv(),
View(CPALTT01USM657N)
cpi <- getSymbols.FRED('CPALTT01USM657N',
env=globalenv(),
return.class = "xts")
cpii <- read_csv(url("https://fred.stlouisfed.org/series/CPALTT01USM657N"))
View(cpii)
View(CPALTT01USM657N)
library(tidyverse)
library(quantmod)
library(PortfolioAnalytics)
library(fPortfolio)
library(PerformanceAnalytics)
library(readr)
library(psych)
library(DEoptim)
library(visdat)
Equity <- c("BSMXB.MX", "VOLARA.MX", "TLEVISACPO.MX", "FEMSAUBD.MX", "CEMEXCPO.MX", "LABB.MX", "AGUA.MX", "KIMBERA.MX", "NEMAKA.MX")
getSymbols(Equity, from=as.Date("2017-02-05"), to=Sys.Date())
Santander <- Ad(BSMXB.MX)
getSymbols(Equity, from=as.Date("2017-02-05"), to=Sys.Date())
library(tidyverse)
library(quantmod)
library(PortfolioAnalytics)
library(fPortfolio)
library(PerformanceAnalytics)
library(readr)
library(psych)
library(DEoptim)
library(visdat)
library(tidyverse)
library(psych)
library(visdat)
library(readr)
library(readxl)
library(quantmod)
Equity <- c("BSMXB.MX", "VOLARA.MX", "TLEVISACPO.MX", "FEMSAUBD.MX", "CEMEXCPO.MX", "LABB.MX", "AGUA.MX", "KIMBERA.MX", "NEMAKA.MX")
getSymbols(Equity, from=as.Date("2017-02-05"), to=Sys.Date())
Commodities <- c("KC=F", "SB=F", "GC=F", "SI=F", "ZW=F")
getSymbols(Commodities)
getSymbols(Commodities, from=as.Date("2017-02-05"), to=Sys.Date())
library(tidyverse)
library(quantmod)
library(PortfolioAnalytics)
library(fPortfolio)
library(PerformanceAnalytics)
library(readr)
library(psych)
library(DEoptim)
library(visdat)
library(tidyverse)
library(psych)
library(visdat)
library(readr)
library(readxl)
library(quantmod)
Equity <- c("BSMXB.MX", "VOLARA.MX", "TLEVISACPO.MX", "FEMSAUBD.MX", "CEMEXCPO.MX", "LABB.MX", "AGUA.MX", "KIMBERA.MX", "NEMAKA.MX")
getSymbols(Equity, from=as.Date("2017-02-05"), to=Sys.Date())
Santander <- Ad(BSMXB.MX)
Volaris <- Ad(VOLARA.MX)
Televisa <- Ad(TLEVISACPO.MX)
FEMSA <- Ad(FEMSAUBD.MX)
Cemex <- Ad(CEMEXCPO.MX)
Genoma <- Ad(LABB.MX)
Rotoplas <- Ad(AGUA.MX)
Kimberly <- Ad(KIMBERA.MX)
Nemaka <- Ad(NEMAKA.MX)
EquityAd <- merge.xts(Santander, Volaris, Televisa, FEMSA, Cemex, Genoma, Rotoplas, Kimberly, Nemaka,
join = "inner") #interseccion, solo toma los días donde todos                                            cotizan
Equity_Rend_log <- Return.calculate(EquityAd, method = "log")[-1] #logN(x2/x1)
Commodities <- c("KC=F", "SB=F", "GC=F", "SI=F", "ZW=F")
getSymbols(Commodities, from=as.Date("2017-02-05"), to=Sys.Date())
Commodities_ad <- NULL
for(i in Commodities){
assign(paste0("Ad_",i), Ad(get(i)))
Commodities_ad <- c(Commodities_ad, paste0("Ad_",i))
}
Commodities_Portfolio <- merge.xts(get(Commodities_ad[1]),
get(Commodities_ad[2]),
join = "inner")
for(i in 3:length(Commodities_ad)){
Commodities_Portfolio <- merge.xts(Commodities_Portfolio,
get(Commodities_ad[i]),
join = "inner")
}
Commodities_Returns <- Return.calculate(Commodities_Portfolio)[-1,]
View(Commodities_Returns)
View(Equity_Rend_log)
Eq_Specs_Port <- portfolio.spec(c("BSMXB.MX", "VOLARA.MX", "TLEVISACPO.MX", "FEMSAUBD.MX", "CEMEXCPO.MX", "LABB.MX", "AGUA.MX", "KIMBERA.MX", "NEMAKA.MX"))
##### Add Constraints #####
Eq_Specs_Port <- add.constraint(Eq_Specs_Port,
type="full_investment")
Eq_Specs_Port <- add.constraint(Eq_Specs_Port,
type="long_only")
##### Add Objective #####
Eq_Specs_Port <- add.objective(Eq_Specs_Port,
type="risk",
name="StdDev")
Eq_Specs_Port <- add.objective(Eq_Specs_Port,
type='return',
name='mean')
Eq_Specs_Port
covnig<-function(R,portfolio){
a<-fit.NIGmv(R,silent=TRUE)
COV<-a@variance
mu<-a@expected.value
mu<-matrix(mu,ncol = 1)
resultado<-list(mu=mu,sigma=COV)
return(resultado)
}
Optimized_Port_NIG <- optimize.portfolio(rendimientos,
Eq_Specs_Port,
momentFUN = covnig,
optimize_method = "random",
trace = TRUE)
covnig<-function(R,portfolio){
a<-fit.NIGmv(R,silent=TRUE)
COV<-a@variance
mu<-a@expected.value
mu<-matrix(mu,ncol = 1)
resultado<-list(mu=mu,sigma=COV)
return(resultado)
}
Optimized_Port_NIG <- optimize.portfolio(Equity_Rend_log,
Eq_Specs_Port,
momentFUN = covnig,
optimize_method = "random",
trace = TRUE)
chart.Weights(Optimized_Port_NIG, plot.type = "barplot")
Optimized_Port_NIG <- optimize.portfolio(Equity_Rend_log,
Eq_Specs_Port,
momentFUN = covnig,
optimize_method = "random",
trace = TRUE)
library(ghyp)
Optimized_Port_NIG <- optimize.portfolio(Equity_Rend_log,
Eq_Specs_Port,
momentFUN = covnig,
optimize_method = "random",
trace = TRUE)
chart.Weights(Optimized_Port_NIG, plot.type = "barplot")
W_R_NIG <- extractWeights(Optimized_Port_NIG)
W_R_NIG
sum(W_R_NIG)
Return_Port_NIG <- Return.portfolio(rendimientos, W_R_NIG)
Return_Port_NIG <- Return.portfolio(Equity_Rend_log, W_R_NIG)
table.AnnualizedReturns(Return_Port_NIG,
scale = 252,
geometric = FALSE)
Return.cumulative(Return_Port_NIG,
geometric = FALSE)
chart.RiskReward(Optimized_Port_NIG,
risk.col = 'StdDev',
return.col = 'mean',
chart.assets = TRUE)
Return_Port_NIG <- Return.portfolio(Equity_Rend_log, W_R_NIG)
table.AnnualizedReturns(Return_Port_NIG,
scale = 252,
geometric = FALSE)
Return.cumulative(Return_Port_NIG,
geometric = FALSE)
plot(Optimized_Port_NIG)
Commodities <- c("KC=F", "SB=F", "GC=F", "SI=F", "ZW=F")
getSymbols(Commodities, from=as.Date("2017-02-05"), to=Sys.Date())
Commodities_ad <- NULL
for(i in Commodities){
assign(paste0("Ad_",i), Ad(get(i)))
Commodities_ad <- c(Commodities_ad, paste0("Ad_",i))
}
Commodities_Portfolio <- merge.xts(get(Commodities_ad[1]),
get(Commodities_ad[2]),
join = "inner")
for(i in 3:length(Commodities_ad)){
Commodities_Portfolio <- merge.xts(Commodities_Portfolio,
get(Commodities_ad[i]),
join = "inner")
}
Commodities_Returns <- Return.calculate(Commodities_Portfolio)[-1,]
chart.Weights(Optimized_Port_NIG, plot.type = "barplot")
W_R_NIG <- extractWeights(Optimized_Port_NIG)
W_R_NIG
sum(W_R_NIG)
plot(Return_Port_NIG)
plot(cumsum(Return_Port_NIG))
Return_Port_NIG <- Return.portfolio(Equity_Rend_log, W_R_NIG)
plot(cumsum(Return_Port_NIG))
plot(cumsum(Return_Port_NIG))
Commodities <- c("KC=F", "SB=F", "GC=F", "SI=F", "ZW=F")
getSymbols(Commodities, from=as.Date("2017-02-05"), to=Sys.Date())
Commodities_ad <- NULL
for(i in Commodities){
assign(paste0("Ad_",i), Ad(get(i)))
Commodities_ad <- c(Commodities_ad, paste0("Ad_",i))
}
Commodities_Portfolio <- merge.xts(get(Commodities_ad[1]),
get(Commodities_ad[2]),
join = "inner")
for(i in 3:length(Commodities_ad)){
Commodities_Portfolio <- merge.xts(Commodities_Portfolio,
get(Commodities_ad[i]),
join = "inner")
}
Commodities_Returns <- Return.calculate(Commodities_Portfolio)[-1,]
View(Commodities_Portfolio)
dta_fram_commodities <- as.data.frame(Commodities_Portfolio)
View(dta_fram_commodities)
dta_fram_commodities <- dta_fram_commodities %>%
mutate(fecha=index(Commodities_Portfolio))
View(dta_fram_commodities)
dta_fram_commodities_tidy <- dta_fram_commodities %>%
gather(-fecha, value = Rendimiento, key=Activo_comm)
View(dta_fram_commodities_tidy)
dta_fram_commodities_tidy %>%
ggplot(aes(x=fecha, y=Rendimiento, col=Activo_comm))+
geom_line()
dta_fram_commodities_tidy %>%
ggplot(aes(x=fecha, y=Rendimiento, col=Activo_comm))+
geom_line()+
scale_y_log10()
dta_fram_commodities_tidy %>%
ggplot(aes(x=fecha, y=Rendimiento, col=Activo_comm))+
geom_line()+
facet_wrap()
dta_fram_commodities_tidy %>%
ggplot(aes(x=fecha, y=Rendimiento, col=Activo_comm))+
geom_line()+
facet_wrap(.~Activo_comm)
dta_fram_commodities_tidy %>%
ggplot(aes(x=fecha, y=Rendimiento, col=Activo_comm))+
geom_line()+
facet_wrap(.~Activo_comm, scales = "free")
Fibras <- c("FMTY14.MX", "FUNO11.MX", "FIBRAPL14.MX", "FIBRAMQ12.MX")
getSymbols(Fibras)
Equity <- c("BSMXB.MX", "VOLARA.MX", "TLEVISACPO.MX", "FEMSAUBD.MX", "CEMEXCPO.MX", "LABB.MX", "AGUA.MX", "KIMBERA.MX", "NEMAKA.MX", "AMZN", "WM", "NVS", "SAN", "BIMBOA.MX", "C", "NVDA")
getSymbols(Equity, from=as.Date("2017-02-05"), to=Sys.Date())
Equity_ad <- NULL
for(i in Commodities){
assign(paste0("Ad_",i), Ad(get(i)))
Commodities_ad <- c(Commodities_ad, paste0("Ad_",i))
}
Equity_Portfolio <- merge.xts(get(Commodities_ad[1]),
get(Commodities_ad[2]),
join = "inner")
for(i in 3:length(Commodities_ad)){
Commodities_Portfolio <- merge.xts(Commodities_Portfolio,
get(Commodities_ad[i]),
join = "inner")
}
Equity_Returns <- Return.calculate(Commodities_Portfolio)[-1,]
Equity <- c("BSMXB.MX", "VOLARA.MX", "TLEVISACPO.MX", "FEMSAUBD.MX", "CEMEXCPO.MX", "LABB.MX", "AGUA.MX", "KIMBERA.MX", "NEMAKA.MX", "AMZN", "WM", "NVS", "SAN", "BIMBOA.MX", "C", "NVDA")
getSymbols(Equity, from=as.Date("2017-02-05"), to=Sys.Date())
Equity_ad <- NULL
for(i in Equity){
assign(paste0("Ad_",i), Ad(get(i)))
Equity_ad <- c(Equity_ad, paste0("Ad_",i))
}
Equity_Portfolio <- merge.xts(get(Equity_ad[1]),
get(Equity_ad[2]),
join = "inner")
for(i in 3:length(Equity_ad)){
Equity_Portfolio <- merge.xts(Equity_Portfolio,
get(Equity_ad[i]),
join = "inner")
}
Equity_Returns <- Return.calculate(Equity_Portfolio)[-1,]
Eq_Specs_Port <- portfolio.spec(c("BSMXB.MX", "VOLARA.MX", "TLEVISACPO.MX", "FEMSAUBD.MX", "CEMEXCPO.MX", "LABB.MX", "AGUA.MX", "KIMBERA.MX", "NEMAKA.MX", "AMZN", "WM", "NVS", "SAN", "BIMBOA.MX", "C", "NVDA"))
##### Add Constraints #####
Eq_Specs_Port <- add.constraint(Eq_Specs_Port,
type="full_investment")
Eq_Specs_Port <- add.constraint(Eq_Specs_Port,
type="long_only")
##### Add Objective #####
Eq_Specs_Port <- add.objective(Eq_Specs_Port,
type="risk",
name="StdDev")
Eq_Specs_Port <- add.objective(Eq_Specs_Port,
type='return',
name='mean')
Eq_Specs_Port
