library(readxl)
IDBTVER2y <- read_excel("Datos/Nota_Estructurada/IDBTVER2y.xlsx",
sheet = "Hoja1", col_types = c("date",
"numeric"))
View(IDBTVER2y)
IDBTVER <- IDBTVER2y %>%
remove_rownames %>%
column_to_rownames(var="Date") %>%
as.xts()
View(IDBTVER)
plot(IDBTVER,
type="l")
install.packages("ggdensity")
##### Load Packages #####
library(quantmod)
##### Load Packages #####
library(quantmod)
##### Load Packages #####
library(quantmod)
library(quantmod)
library(PerformanceAnalytics)
library(PortfolioAnalytics)
library(DEoptim)
library(fBasics)
library(ghyp)
##### Define the tokens of the assets #####
Symbols_4 <- c("AMZN", "WM", "NVS", "SAN", "BIMBOA.MX", "C", "NVDA", "SI=F")
getSymbols(Symbols_4, from=as.Date("2017-02-05"), to=Sys.Date())
##### Combine the Adjusted Prices into a single matrix #####
Symbols_4_ad <- NULL
for(i in Symbols_4){
assign(paste0("Ad_",i), Ad(get(i)))
Symbols_4_ad <- c(Symbols_4_ad, paste0("Ad_",i))
}
Portfolio_4 <- merge.xts(get(Symbols_4_ad[1]),
get(Symbols_4_ad[2]),
join = "inner")
for(i in 3:length(Symbols_4_ad)){
Portfolio_4 <- merge.xts(Portfolio_4,
get(Symbols_4_ad[i]),
join = "inner")
}
colnames(Portfolio_4) <- Symbols_4
##### Compute the returns of the portfolio #####
Returns_4 <- Return.calculate(Portfolio_4)[-1,]
##### Create the Portfolio Object #####
Specs_Port4 <- portfolio.spec(Symbols_4)
##### Add Constraints #####
Specs_Port4 <- add.constraint(Specs_Port4,type="full_investment")
Specs_Port4 <- add.constraint(Specs_Port4,type="long_only")
Specs_Port4 <- add.objective(Specs_Port4,type="risk",name="StdDev")
Specs_Port4 <- add.objective(Specs_Port4,type='return',name='mean')
Specs_Port4
covnig<-function(R,portfolio){
a<-fit.NIGmv(R,silent=TRUE)
COV<-a@variance
mu<-a@expected.value
mu<-matrix(mu,ncol = 1)
resultado<-list(mu=mu,sigma=COV)
return(resultado)
}
covnig(Returns_4)
##### Optimization #####
Optimized_Port4 <- optimize.portfolio(Returns_4,
Specs_Port4,
momentFUN = covnig,
optimize_method = "random",
trace = TRUE)
Optimized_Port4
chart.Weights(Optimized_Port3, plot.type = "barplot")
##### Optimization #####
Optimized_Port4 <- optimize.portfolio(Returns_4,
Specs_Port4,
momentFUN = covnig,
optimize_method = "random",
trace = TRUE)
##### Optimization #####
Optimized_Port4 <- optimize.portfolio(Returns_4,
Specs_Port4,
momentFUN = covnig,
constraints='full_investment',
optimize_method = "random",
trace = TRUE)
View(Portfolio_4)
##### Optimization #####
Optimized_Port4 <- optimize.portfolio(Returns_4,
Specs_Port4,
momentFUN = covnig,
constraints=c(in_sum=0.99, max_sum=1.0),
optimize_method = "random",
trace = TRUE)
##### Optimization #####
Optimized_Port4 <- optimize.portfolio(Returns_4,
Specs_Port4,
momentFUN = covnig,
constraints=(max_sum=1.0),
optimize_method = "random",
trace = TRUE)
##### Optimization #####
Optimized_Port4 <- optimize.portfolio(Returns_4,
Specs_Port4,
momentFUN = covnig,
constraints=(max_sum=1.0),
optimize_method = "random",
trace = TRUE)
##### Optimization #####
Optimized_Port4 <- optimize.portfolio(Returns_4,
Specs_Port4,
momentFUN = covnig,
constraints='v1_constraint',
optimize_method = "random",
trace = TRUE)
##### Optimization #####
Optimized_Port4 <- optimize.portfolio(Returns_4,
Specs_Port4,
momentFUN = covnig,
constraints=c('v1_constraint'),
optimize_method = "random",
trace = TRUE)
##### Optimization #####
Optimized_Port4 <- optimize.portfolio(Returns_4,
momentFUN = covnig,
constraints= Specs_Port4,
optimize_method = "random",
trace = TRUE)
##### Load Packages #####
library(quantmod)
library(PerformanceAnalytics)
library(PortfolioAnalytics)
library(DEoptim)
library(fBasics)
library(ghyp)
##### Define the tokens of the assets #####
Symbols_4 <- c("AMZN", "WM", "NVS", "SAN", "BIMBOA.MX", "C", "NVDA", "SI=F")
getSymbols(Symbols_4, from=as.Date("2017-02-05"), to=Sys.Date())
##### Combine the Adjusted Prices into a single matrix #####
Symbols_4_ad <- NULL
for(i in Symbols_4){
assign(paste0("Ad_",i), Ad(get(i)))
Symbols_4_ad <- c(Symbols_4_ad, paste0("Ad_",i))
}
Portfolio_4 <- merge.xts(get(Symbols_4_ad[1]),
get(Symbols_4_ad[2]),
join = "inner")
for(i in 3:length(Symbols_4_ad)){
Portfolio_4 <- merge.xts(Portfolio_4,
get(Symbols_4_ad[i]),
join = "inner")
}
colnames(Portfolio_4) <- Symbols_4
View(Portfolio_4)
colnames(Portfolio_4) <- Symbols_4
##### Compute the returns of the portfolio #####
Returns_4 <- Return.calculate(Portfolio_4)[-1,]
##### Create the Portfolio Object #####
Specs_Port4 <- portfolio.spec(Symbols_4)
##### Add Constraints #####
Specs_Port4 <- add.constraint(Specs_Port4,type="full_investment")
Specs_Port4 <- add.constraint(Specs_Port4,type="long_only")
##### Add Objective #####
Specs_Port4 <- add.objective(Specs_Port4,type="risk",name="StdDev")
Specs_Port4 <- add.objective(Specs_Port4,type='return',name='mean')
Specs_Port4
covnig<-function(R,portfolio){
a<-fit.NIGmv(R,silent=TRUE)
COV<-a@variance
mu<-a@expected.value
mu<-matrix(mu,ncol = 1)
resultado<-list(mu=mu,sigma=COV)
return(resultado)
}
covnig(Returns_4)
##### Optimization #####
Optimized_Port4 <- optimize.portfolio(Returns_4,
Specs_Port4,
momentFUN = covnig,
optimize_method = "random",
trace = TRUE)
##### Add Constraints #####
Specs_Port4 <- add.constraint(Specs_Port4,type="max_sum=1")
Specs_Port4 <- add.constraint(Specs_Port4,type="long_only")
##### Add Objective #####
Specs_Port4 <- add.objective(Specs_Port4,type="risk",name="StdDev")
Specs_Port4 <- add.objective(Specs_Port4,type='return',name='mean')
Specs_Port4
covnig<-function(R,portfolio){
a<-fit.NIGmv(R,silent=TRUE)
COV<-a@variance
mu<-a@expected.value
mu<-matrix(mu,ncol = 1)
resultado<-list(mu=mu,sigma=COV)
return(resultado)
}
covnig(Returns_4)
##### Optimization #####
Optimized_Port4 <- optimize.portfolio(Returns_4,
Specs_Port4,
momentFUN = covnig,
optimize_method = "random",
trace = TRUE)
##### Add Constraints #####
Specs_Port4 <- add.constraint(Specs_Port4,type="min_sum=1")
##### Optimization #####
Optimized_Port4 <- optimize.portfolio(Returns_4,
Specs_Port4,
momentFUN = covnig,
optimize_method = "random",
trace = TRUE)
##### Add Constraints #####
Specs_Port4 <- add.constraint(Specs_Port4,
type="weight_sum", min_sum=1, max_sum=1)
##### Optimization #####
Optimized_Port4 <- optimize.portfolio(Returns_4,
Specs_Port4,
momentFUN = covnig,
optimize_method = "random",
trace = TRUE)
##### Define the tokens of the assets #####
Symbols_4 <- c("AMZN", "WM", "NVS", "SAN", "BIMBOA.MX", "C", "NVDA", "SI=F")
getSymbols(Symbols_4, from=as.Date("2017-02-05"), to=Sys.Date())
##### Combine the Adjusted Prices into a single matrix #####
Symbols_4_ad <- NULL
for(i in Symbols_4){
assign(paste0("Ad_",i), Ad(get(i)))
Symbols_4_ad <- c(Symbols_4_ad, paste0("Ad_",i))
}
Portfolio_4 <- merge.xts(get(Symbols_4_ad[1]),
get(Symbols_4_ad[2]),
join = "inner")
for(i in 3:length(Symbols_4_ad)){
Portfolio_4 <- merge.xts(Portfolio_4,
get(Symbols_4_ad[i]),
join = "inner")
}
Portfolio_4 <- merge.xts(Portfolio_4,
get(Symbols_4_ad[i]),
join = "inner")
for(i in 3:length(Symbols_4_ad)){
Portfolio_4 <- merge.xts(Portfolio_4,
get(Symbols_4_ad[i]),
join = "inner")
}
colnames(Portfolio_4) <- Symbols_4
##### Compute the returns of the portfolio #####
Returns_4 <- Return.calculate(Portfolio_4)[-1,]
##### Create the Portfolio Object #####
Specs_Port4 <- portfolio.spec(Symbols_4)
##### Add Constraints #####
Specs_Port4 <- add.constraint(Specs_Port4,
type="weight_sum", min_sum=1, max_sum=1)
Specs_Port4 <- add.constraint(Specs_Port4,type="long_only")
##### Add Objective #####
Specs_Port4 <- add.objective(Specs_Port4,type="risk",name="StdDev")
Specs_Port4 <- add.objective(Specs_Port4,type='return',name='mean')
Specs_Port4
covnig<-function(R,portfolio){
a<-fit.NIGmv(R,silent=TRUE)
COV<-a@variance
mu<-a@expected.value
mu<-matrix(mu,ncol = 1)
resultado<-list(mu=mu,sigma=COV)
return(resultado)
}
covnig(Returns_4)
##### Optimization #####
Optimized_Port4 <- optimize.portfolio(Returns_4,
Specs_Port4,
momentFUN = covnig,
optimize_method = "random",
trace = TRUE)
library(quantmod)
library(PerformanceAnalytics)
library(PortfolioAnalytics)
library(DEoptim)
library(fBasics)
library(ghyp)
Symbols_4 <- c("AMZN", "WM", "NVS", "SAN", "BIMBOA.MX", "C", "NVDA", "SI=F")
getSymbols(Symbols_4, from=as.Date("2017-02-05"), to=Sys.Date())
##### Combine the Adjusted Prices into a single matrix #####
Symbols_4_ad <- NULL
for(i in Symbols_4){
assign(paste0("Ad_",i), Ad(get(i)))
Symbols_4_ad <- c(Symbols_4_ad, paste0("Ad_",i))
}
Portfolio_4 <- merge.xts(get(Symbols_4_ad[1]),
get(Symbols_4_ad[2]),
join = "inner")
for(i in 3:length(Symbols_4_ad)){
Portfolio_4 <- merge.xts(Portfolio_4,
get(Symbols_4_ad[i]),
join = "inner")
}
for(i in 3:length(Symbols_4_ad)){
Portfolio_4 <- merge.xts(Portfolio_4,
get(Symbols_4_ad[i]),
join = "inner")
}
colnames(Portfolio_4) <- Symbols_4
View(Portfolio_4)
colnames(Portfolio_4) <- Symbols_4
colnames(Portfolio_4) <- Symbols_4
##### Compute the returns of the portfolio #####
Returns_4 <- Return.calculate(Portfolio_4)[-1,]
##### Compute the returns of the portfolio #####
Returns_4 <- Return.calculate(Portfolio_4)[-1,]
##### Create the Portfolio Object #####
Specs_Port4 <- portfolio.spec(Symbols_4)
##### Add Constraints #####
Specs_Port4 <- add.constraint(Specs_Port4,type="full_investment")
Specs_Port4 <- add.constraint(Specs_Port4,type="long_only")
##### Add Objective #####
Specs_Port4 <- add.objective(Specs_Port4,type="risk",name="StdDev")
Specs_Port4 <- add.objective(Specs_Port4,type='return',name='mean')
Specs_Port4
covnig<-function(R,portfolio){
a<-fit.NIGmv(R,silent=TRUE)
COV<-a@variance
mu<-a@expected.value
mu<-matrix(mu,ncol = 1)
resultado<-list(mu=mu,sigma=COV)
return(resultado)
}
covnig(Returns_4)
##### Optimization #####
Optimized_Port4 <- optimize.portfolio(Returns_4,
Specs_Port4,
momentFUN = covnig,
optimize_method = "random",
trace = TRUE)
View(covnig)
View(covnig)
View(portfolio)
##### Load Packages #####
library(quantmod)
library(PerformanceAnalytics)
library(PortfolioAnalytics)
library(DEoptim)
library(fBasics)
library(ghyp)
##### Define the tokens of the assets #####
Symbols_4 <- c("AMZN", "WM", "NVS", "SAN", "BIMBOA.MX", "C", "NVDA", "SI=F")
colnames(Portfolio_4) <- Symbols_4
View(Symbols_4)
View(Portfolio_4)
Symbols_4
library(quantmod)
library(PerformanceAnalytics)
library(PortfolioAnalytics)
library(DEoptim)
library(fBasics)
library(ghyp)
##### Define the tokens of the assets #####
Symbols_4 <- c("AMZN", "WM", "NVS", "SAN", "BIMBOA.MX", "C", "NVDA", "SI=F")
getSymbols(Symbols_4, from=as.Date("2017-02-05"), to=Sys.Date())
##### Combine the Adjusted Prices into a single matrix #####
Symbols_4_ad <- NULL
for(i in Symbols_4){
assign(paste0("Ad_",i), Ad(get(i)))
Symbols_4_ad <- c(Symbols_4_ad, paste0("Ad_",i))
}
Portfolio_4 <- merge.xts(get(Symbols_4_ad[1]),
get(Symbols_4_ad[2]),
join = "inner")
for(i in 3:length(Symbols_4_ad)){
Portfolio_4 <- merge.xts(Portfolio_4,
get(Symbols_4_ad[i]),
join = "inner")
}
Symbols_4
colnames(Portfolio_4) <- Symbols_4
View(Portfolio_4)
##### Compute the returns of the portfolio #####
Returns_4 <- Return.calculate(Portfolio_4)[-1,]
View(Returns_4)
##### Create the Portfolio Object #####
Specs_Port4 <- portfolio.spec(Symbols_4)
##### Add Constraints #####
Specs_Port4 <- add.constraint(Specs_Port4,type="full_investment")
Specs_Port4 <- add.constraint(Specs_Port4,type="long_only")
##### Add Objective #####
Specs_Port4 <- add.objective(Specs_Port4,type="risk",name="StdDev")
Specs_Port4 <- add.objective(Specs_Port4,type='return',name='mean')
Specs_Port4
covnig<-function(R,portfolio){
a<-fit.NIGmv(R,silent=TRUE)
COV<-a@variance
mu<-a@expected.value
mu<-matrix(mu,ncol = 1)
resultado<-list(mu=mu,sigma=COV)
return(resultado)
}
covnig(Returns_4)
##### Optimization #####
Optimized_Port4 <- optimize.portfolio(Returns_4,
Specs_Port4,
momentFUN = covnig,
optimize_method = "random",
trace = TRUE)
##### Add Constraints #####
Specs_Port4 <- add.constraint(Specs_Port4,
type="weight_sum", min_sum=1, max_sum=1)
Specs_Port4 <- add.constraint(Specs_Port4,type="long_only")
##### Add Objective #####
Specs_Port4 <- add.objective(Specs_Port4,type="risk",name="StdDev")
Specs_Port4 <- add.objective(Specs_Port4,type='return',name='mean')
Specs_Port4
covnig<-function(R,portfolio){
a<-fit.NIGmv(R,silent=TRUE)
COV<-a@variance
mu<-a@expected.value
mu<-matrix(mu,ncol = 1)
resultado<-list(mu=mu,sigma=COV)
return(resultado)
}
covnig(Returns_4)
##### Optimization #####
Optimized_Port4 <- optimize.portfolio(Returns_4,
Specs_Port4,
momentFUN = covnig,
optimize_method = "random",
trace = TRUE)
##### Add Constraints #####
Specs_Port4 <- add.constraint(Specs_Port4,
type="weight_sum", max_sum=1)
##### Optimization #####
Optimized_Port4 <- optimize.portfolio(Returns_4,
Specs_Port4,
momentFUN = covnig,
optimize_method = "random",
trace = TRUE)
##### Add Constraints #####
Specs_Port4 <- add.constraint(Specs_Port4,
type="weight_sum", min = 0, mx = 1)
##### Optimization #####
Optimized_Port4 <- optimize.portfolio(Returns_4,
Specs_Port4,
momentFUN = covnig,
optimize_method = "random",
trace = TRUE)
##### Optimization #####
Optimized_Port4 <- optimize.portfolio(Returns_4,
Specs_Port4,
momentFUN = covnig,
optimize_method = "random",
trace = TRUE,
message = FALSE)
library(quantmod)
library(PerformanceAnalytics)
library(PortfolioAnalytics)
library(DEoptim)
library(fBasics)
library(ghyp)
##### Define the tokens of the assets #####
Symbols_4 <- c("AMZN", "WM", "NVS", "SAN", "BIMBOA.MX", "C", "NVDA", "SI=F")
getSymbols(Symbols_4, from=as.Date("2017-02-05"), to=Sys.Date())
##### Combine the Adjusted Prices into a single matrix #####
Symbols_4_ad <- NULL
for(i in Symbols_4){
assign(paste0("Ad_",i), Ad(get(i)))
Symbols_4_ad <- c(Symbols_4_ad, paste0("Ad_",i))
}
Portfolio_4 <- merge.xts(get(Symbols_4_ad[1]),
get(Symbols_4_ad[2]),
join = "inner")
for(i in 3:length(Symbols_4_ad)){
Portfolio_4 <- merge.xts(Portfolio_4,
get(Symbols_4_ad[i]),
join = "inner")
}
colnames(Portfolio_4) <- Symbols_4
##### Compute the returns of the portfolio #####
Returns_4 <- Return.calculate(Portfolio_4)[-1,]
##### Create the Portfolio Object #####
Specs_Port4 <- portfolio.spec(Symbols_4)
##### Add Constraints #####
Specs_Port4 <- add.constraint(Specs_Port4,
type="weight_sum", min = 0, mx = 1)
Specs_Port4 <- add.constraint(Specs_Port4,type="long_only")
##### Add Objective #####
Specs_Port4 <- add.objective(Specs_Port4,type="risk",name="StdDev")
Specs_Port4 <- add.objective(Specs_Port4,type='return',name='mean')
Specs_Port4
covnig<-function(R,portfolio){
a<-fit.NIGmv(R,silent=TRUE)
COV<-a@variance
mu<-a@expected.value
mu<-matrix(mu,ncol = 1)
resultado<-list(mu=mu,sigma=COV)
return(resultado)
}
covnig(Returns_4)
##### Optimization #####
Optimized_Port4 <- optimize.portfolio(Returns_4,
Specs_Port4,
momentFUN = covnig,
optimize_method = "random",
trace = TRUE)
warnings()
##### Optimization #####
Optimized_Port4 <- optimize.portfolio(Returns_4,
Specs_Port4,
momentFUN = covnig,
optimize_method = "random",
trace = TRUE)
x = TRUE
if(is.na(x)) {x=FALSE} else {if(x) {x}}
##### Optimization #####
Optimized_Port4 <- optimize.portfolio(Returns_4,
Specs_Port4,
momentFUN = covnig,
optimize_method = "random",
trace = TRUE)
