library(zoo)
library(xts)
library(TTR)
library(IntroCompFinR)
library(kableExtra)
library(pacman)
library(hrbrthemes)
library(quantmod)
library(PerformanceAnalytics)
library(tidyverse)
library(psych)
library(forecast)
library(tseries)
library(timeSeries)
library(naniar)
library(lmtest)
library(stocks)
library(zoo)
library(xts)
library(TTR)
library(IntroCompFinR)
library(kableExtra)
library(pacman)
library(hrbrthemes)
library(quantmod)
library(PerformanceAnalytics)
library(tidyverse)
library(psych)
library(forecast)
library(tseries)
library(timeSeries)
library(naniar)
library(lmtest)
library(stocks)
getSymbols("BTC-USD", from = "2017-03-01", to = "2022-02-20")
getSymbols("ETH-USD", from = "2017-03-01", to = "2022-02-20")
getSymbols("USDC-USD", from = "2017-03-01", to = "2022-02-20")
getSymbols("USDT-USD", from = "2017-03-01", to = "2022-02-20")
getSymbols("ADA-USD", from = "2017-03-01", to = "2022-02-20")
getSymbols("BNB-USD", from = "2017-03-01", to = "2022-02-20")
getSymbols("XRP-USD", from = "2017-03-01", to = "2022-02-20")
getSymbols("HEX-USD", from = "2017-03-01", to = "2022-02-20")
#------------------------
btc <- Ad(`BTC-USD`)
eth <- Ad(`ETH-USD`)
usdc <- Ad(`USDC-USD`)
usdt <- Ad(`USDT-USD`)
ada <- Ad(`ADA-USD`)
bnb <- Ad(`BNB-USD`)
xrp <- Ad(`XRP-USD`)
hex <- Ad(`HEX-USD`)
#------------------------
btc <- na.locf(btc)
eth <- na.locf(eth)
usdc <- na.locf(usdc)
usdt <- na.locf(usdt)
ada <- na.locf(ada)
bnb <- na.locf(bnb)
xrp <- na.locf(xrp)
hex <- na.locf(hex)
adf.test(btc)
adf.test(eth)
adf.test(usdc)
adf.test(usdt)
adf.test(ada)
adf.test(bnb)
adf.test(xrp)
adf.test(hex)
sfTest(btc)
library(zoo)
library(xts)
library(TTR)
library(IntroCompFinR)
library(kableExtra)
library(pacman)
library(hrbrthemes)
library(quantmod)
library(PerformanceAnalytics)
library(tidyverse)
library(psych)
library(forecast)
library(tseries)
library(timeSeries)
library(naniar)
library(lmtest)
library(stocks)
sfTest(btc)
install.packages("nortest")
library(nortest)
sfTest(btc)
sf.test(btc)
muN_btc <- mean(btc)
sdN_btc <- sd(btc)
gridN_btc <- seq(-.20, .20, by = .001)
dN_btc <- dnorm(gridN_btc, muN_btc, sdN_btc)
library(MASS)
library(GeneralizedHyperbolic)
NIG_btc <- nigFit(btc)
#agrupar parametros en un objeto
ParametroNIG_btc <- NIG_btc@fit[["par"]]
ParametroNIG_btc <- data.frame(t(ParametroNIG_btc))
#agrupar parametros en un objeto
ParametroNIG_btc <- NIG_btc@fit[["par"]]
Criptomonedas <- merge.xts(btc,
eth,
usdc,
usdt,
ada,
bnb,
xrp,
hex,
join = "inner")
cor.plot(Criptomonedas)
chartSeries(Criptomonedas)
chart.TimeSeries(scale(Criptomonedas), legend.loc = "topleft")
Rendimientos_C <- Return.calculate(Criptomonedas, method = "log")[-1]
chart.CumReturns(Rendimientos_C, from = "2018-01-01", to = "2022-02-20", legend.loc = "topleft")
chart.CumReturns(Rendimientos_C, from = "2019-01-01", to = "2022-02-20", legend.loc = "topleft")
mean <- apply(Return.calculate(Criptomonedas, method = "log")[-1,],
2,function(x) mean(x))
sd<- apply(Return.calculate(Criptomonedas, method = "log")[-1,],
2,function(x) sd(x))
m<- as.data.frame(mean)
m<- t(m)
s<- t(as.data.frame(sd))
x<- rbind(m,s)*100
x %>%
t() %>%
kbl(caption = "Table 1: Media & desviaciÃ³n estandar de los activos", escape = TRUE) %>%
kable_classic(full_width = FALSE, html_font = "Cambria")
ggplot(aes(sd, mean), label(""))
g1<- ggplot(mapping = aes(sd,mean,
label=c("IBM","BABA","AMZN","FB","MSFT","LNVGY","TSLA")))+
geom_point()+
geom_text(hjust=0,vjust=0)+
theme_bw()+xlab("Riesgo")+ylab("Retorno")+
scale_y_continuous(breaks = seq(0,0.003,by=0.001), limits = c(0,0.003))+
scale_x_continuous(breaks = seq(0.015,0.037,by=0.007), limits = c(0.015,0.037))+
ggtitle("Trade-off Riesgo-Retorno", subtitle = "7 Activos Riesgosos")+
theme_minimal()
g1
cov<-cov(Rendimientos_C)*100
cov %>%
round(digits = 4) %>%
kbl(caption = "Table 2: Matriz de covarianzas de los activos", escape = TRUE) %>%
kable_classic(full_width = FALSE, html_font = "Cambria")
generate_heat_map <- function(correlationMatrix, title)
{
heatmap.2(x = correlationMatrix,
cellnote = correlationMatrix,
main = title,
symm = TRUE,
dendrogram="none",
Rowv = FALSE,
trace="none",
density.info="none",
notecol="black")
}
corr1 <- round(cor(Rendimientos_C) * 100, 2)
generate_heat_map(corr1,"Heatmap: Correlaciones")
library(gplot)
library(gplots)
corr1 <- round(cor(Rendimientos_C) * 100, 2)
generate_heat_map(corr1,"Heatmap: Correlaciones")
mean<- apply(Rendimientos_C, 2, function(x) mean(x))
sd<- apply(Rendimientos_C, 2,function(x) sd(x))
cov<- cov(Rendimientos_C)
# Pesos  ------------------------------------------------------------------
weights<- rep(1,8)/8
# construimos el portafolio -----------------------------------------------
getPortfolio(mean,cov,weights =
weights)
# Portafolio de minima varianza -------------------------------------------
globalmin=globalMin.portfolio(mean,cov,
shorts = F)
g3<- ggplot()+geom_point(
mapping = aes(globalmin$sd,
globalmin$er,
color="1"),size=4
)
g3<- g3+geom_point(mapping =
aes(sd,mean,color="2"),
size=4)
g3<- g3+ scale_color_manual(
"",values = c("blue","purple"),
labels=c("Min Var.","Stocks 1")
)
g3<- g3+ xlab("Riesgo")+ylab("Retorno")+
ggtitle("Trade-off Riesgo-Retorno",
subtitle = "Siete Activos riesgos & minima varianza")+
theme_minimal()
g3
data=as.data.frame(round(globalmin$weights*100,2))
for(i in  1:7){
if(data[i,1]==0){
data[i,1]=NA
}
else{
data[i,1]=data[i,1]
}
}
names(data)=c("Pesos")
data=data.frame("Acciones"=tickers,"Pesos"=data)
library(zoo)
library(xts)
library(TTR)
library(IntroCompFinR)
library(kableExtra)
library(pacman)
library(hrbrthemes)
library(quantmod)
library(PerformanceAnalytics)
library(tidyverse)
library(psych)
library(forecast)
library(tseries)
library(timeSeries)
library(naniar)
library(lmtest)
library(stocks)
library(zoo)
library(xts)
library(TTR)
library(IntroCompFinR)
library(kableExtra)
library(pacman)
library(hrbrthemes)
library(quantmod)
library(PerformanceAnalytics)
library(tidyverse)
library(psych)
library(forecast)
library(tseries)
library(timeSeries)
library(naniar)
library(lmtest)
library(stocks)
getSymbols("BTC-USD", from = "2017-03-01", to = "2022-02-20")
getSymbols("ETH-USD", from = "2017-03-01", to = "2022-02-20")
getSymbols("USDC-USD", from = "2017-03-01", to = "2022-02-20")
getSymbols("USDT-USD", from = "2017-03-01", to = "2022-02-20")
getSymbols("ADA-USD", from = "2017-03-01", to = "2022-02-20")
getSymbols("BNB-USD", from = "2017-03-01", to = "2022-02-20")
getSymbols("XRP-USD", from = "2017-03-01", to = "2022-02-20")
getSymbols("HEX-USD", from = "2017-03-01", to = "2022-02-20")
#------------------------
btc <- Ad(`BTC-USD`)
eth <- Ad(`ETH-USD`)
usdc <- Ad(`USDC-USD`)
usdt <- Ad(`USDT-USD`)
ada <- Ad(`ADA-USD`)
bnb <- Ad(`BNB-USD`)
xrp <- Ad(`XRP-USD`)
hex <- Ad(`HEX-USD`)
#------------------------
btc <- na.locf(btc)
eth <- na.locf(eth)
usdc <- na.locf(usdc)
usdt <- na.locf(usdt)
ada <- na.locf(ada)
bnb <- na.locf(bnb)
xrp <- na.locf(xrp)
hex <- na.locf(hex)
Criptomonedas <- merge.xts(btc,
eth,
usdc,
usdt,
ada,
bnb,
xrp,
hex,
join = "inner")
cor.plot(Criptomonedas)
chartSeries(Criptomonedas)
chart.TimeSeries(scale(Criptomonedas), legend.loc = "topleft")
