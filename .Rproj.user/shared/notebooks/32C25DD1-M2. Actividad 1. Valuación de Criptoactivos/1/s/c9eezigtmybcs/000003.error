{"frames":[{"func":"optimize.portfolio(Portafolio_tradicional_Returns, Specs_Port_Trad)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"random_portfolios(portfolio = portfolio, permutations = (NP + \n    1), rp_method = rp_method, eliminate = FALSE, fev = fev)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"rp_sample(portfolio, permutations)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"randomize_portfolio_v2(portfolio = portfolio, max_permutations = max_permutations)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"generatesequence(min = min(constraints$min), max = max(constraints$max), \n    by = 0.002)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"seq(from = round(min, rounding), to = round(max, rounding), by = by)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"seq.default(from = round(min, rounding), to = round(max, rounding), \n    by = by)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(\"'from' must be a finite number\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error in seq.default(from = round(min, rounding), to = round(max, rounding),  : \n  'from' must be a finite number\n"}